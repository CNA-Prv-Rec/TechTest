---
openapi: 3.1.0
info:
  title: Location Tracking
  description: Allows location tracking of users
  contact:
    email: carolyn.anderson@tutamail.com
  version: 1.0.0
servers:
- url: https://api.server.test/v1
tags:
- name: users
  description: all users
- name: user
  description: single user
- name: locationHistory
  description: location histories
paths:
  /users:
    get:
      tags:
      - users
      operationId: getUsers
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    latitude:
                      type: number
                    longitude:
                      type: number
            application/xml:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      format: int64
                    latitude:
                      type: number
                    longitude:
                      type: number
        "400":
          description: Invalid status value
  /user:
    post:
      tags:
      - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                latitude:
                  type: number
                longitude:
                  type: number
          application/xml:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                latitude:
                  type: number
                longitude:
                  type: number
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                latitude:
                  type: number
                longitude:
                  type: number
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  latitude:
                    type: number
                  longitude:
                    type: number
    patch:
      tags:
      - user
      summary: update location
      description: This can only be done by the logged in user.
      operationId: updateLocation
      requestBody:
        description: updated user object with new location
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                latitude:
                  type: number
                longitude:
                  type: number
          application/xml:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                latitude:
                  type: number
                longitude:
                  type: number
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                latitude:
                  type: number
                longitude:
                  type: number
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  latitude:
                    type: number
                  longitude:
                    type: number
  /user/{userId}:
    get:
      tags:
      - user
      summary: Find user by ID
      description: Returns a single user
      operationId: getUserById
      parameters:
      - name: userId
        in: path
        description: ID of user to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  latitude:
                    type: number
                  longitude:
                    type: number
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  latitude:
                    type: number
                  longitude:
                    type: number
        "400":
          description: Invalid ID supplied
        "404":
          description: User not found
  /locationHistory/{userId}:
    get:
      tags:
      - locationHistory
      summary: Get full location history for user
      description: Returns location history of a user
      operationId: getLocationHistory
      parameters:
      - name: userId
        in: path
        description: ID of user
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  userID:
                    type: integer
                    format: int64
                  date:
                    type: string
                    format: datetime
                  latitude:
                    type: number
                  longitude:
                    type: number
            application/xml:
              schema:
                type: object
                properties:
                  userID:
                    type: integer
                    format: int64
                  date:
                    type: string
                    format: datetime
                  latitude:
                    type: number
                  longitude:
                    type: number
        "400":
          description: Invalid ID supplied
        "404":
          description: User not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        latitude:
          type: number
        longitude:
          type: number
    Location:
      type: object
      properties:
        userID:
          type: integer
          format: int64
        date:
          type: string
          format: datetime
        latitude:
          type: number
        longitude:
          type: number
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    User:
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
              latitude:
                type: number
              longitude:
                type: number
        application/xml:
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
              latitude:
                type: number
              longitude:
                type: number
